name: cl-pipeline
on: push
jobs:
  # sonarcloud:
  #   name: sonarcloud
  #   runs-on: windows-latest
  #   steps:
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.11
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Cache SonarCloud packages
  #       uses: actions/cache@v1
  #       with:
  #         path: ~\sonar\cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
  #     - name: Cache SonarCloud scanner
  #       id: cache-sonar-scanner
  #       uses: actions/cache@v1
  #       with:
  #         path: .\.sonar\scanner
  #         key: ${{ runner.os }}-sonar-scanner
  #         restore-keys: ${{ runner.os }}-sonar-scanner
  #     - name: Install SonarCloud scanner
  #       if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
  #       shell: powershell
  #       run: |
  #         New-Item -Path .\.sonar\scanner -ItemType Directory
  #         dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  #     - name: Build and analyze
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       shell: powershell
  #       run: |
  #         .\.sonar\scanner\dotnet-sonarscanner begin -k:"ndiemer_project-pizza-box-web" -o:"ndiemer" -d:sonar.login="${{ secrets.SONAR_TOKEN }}" -d:sonar.host.url="https://sonarcloud.io"
  #         dotnet build
  #         .\.sonar\scanner\dotnet-sonarscanner end -d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  analyze:
    needs:
      - build
      - test
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install -g dotnet-sonarscanner
      - run: dotnet sonarscanner begin -k:"ndiemer_project-pizza-box-web" -o:"ndiemer" -d:sonar.login=$SONAR_TOKEN -d:sonar.host.url="https://sonarcloud.io"
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build

  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}

    needs:
      - analyze
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f Dockerfile -t pizzabox .
      - run: docker image tag pizzabox ndiemer/pizzabox
      - run: docker push ndiemer/pizzabox
      - run: docker logout

  deploy:
    need:
      - package
    runs-on: ubuntu-20.04
    steps:
      - uses: azure/login@v1
        
      - uses: azure/webapps-deploy@v2
        with:
          app-name: pizzabox2552
          images: ndiemer/pizzabox

  test:
    runs-on: ubuntu-20.04
    name: Generate Test Reports
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput='./test_coverage' -l trx -r './test_result/'